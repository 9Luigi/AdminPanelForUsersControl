const mainGridArea=document.getElementById("main"),container=document.getElementById("container"),rightGridArea=document.getElementsByClassName("right")[0],divForUsersTable=document.getElementById("divForUsersTable"),divForNavigateButtons=document.getElementById("divForNavigateButtons"),divForUsersSearch=document.getElementById("divForUsersSearch"),inputSearchByEmail=document.getElementById("inputSearchByEmail"),adminsMenu=document.getElementById("leftMenu"),adminMenuUsers=document.getElementById("adminMenuUsers"),adminMenuSettings=document.getElementById("adminMenuSettings"),idInput=document.getElementById("idInput"),nameInput=document.getElementById("nameInput"),surnameInput=document.getElementById("surnameInput"),emailInput=document.getElementById("emailInput"),roleUser=document.getElementById("roleUser"),roleAdmin=document.getElementById("roleAdmin"),passwordInput=document.getElementById("passwordInput"),phoneNumberInput=document.getElementById("phoneNumberInput"),closeEditUserAreaButton=document.getElementById("closeEditUserAreaButton"),saveUserButton=document.getElementById("saveUserButton"),navigateButtons=document.getElementsByClassName("navigateButtonsOnUsers");let usersCount,users,usersLimit=15,usersOffset=0,navigateOnUsersTableButtonsOnRowCount=14,navigateOnUsersTableButtonsOnRowWidth=50;window.addEventListener("load",()=>{for(let n=0;n<adminsMenu.children.length;n++)adminsMenu.children[n].addEventListener("click",function(){for(let t=0;t<adminsMenu.children.length;t++)adminsMenu.children[t]==adminsMenu.children[n]?adminsMenu.children[t].classList="active":adminsMenu.children[t].classList.contains("active")&&adminsMenu.children[t].classList.remove("active")})});window.addEventListener("load",()=>{adminMenuUsers.click()});let closeRightArea=(n,t)=>{n.classList.remove("containerRightOpen"),setTimeout(()=>t.classList.add("hidden"),200)},userUpdate=async()=>{let n;n=roleAdmin.checked?"Admin":"User";const t=await fetch(`/admin/users`,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({id:idInput.value,name:nameInput.value,surname:surnameInput.value,email:emailInput.value,password:passwordInput.value,phoneNumber:phoneNumberInput.value,role:n})});if(t.ok===!0){const n=await t.json(),i=document.getElementById(`userId${idInput.value}`),r=document.createElement("tr");replaceUserDataIntoTR(i,r,n);document.getElementById(`getUserButton${n.id}`).addEventListener("click",async()=>{updateVisualUserFormAndUsersTable(n)});document.getElementById(`deleteUserButton${n.id}`).addEventListener("click",async()=>{removeUserAsync(n)});alert(`${n.email} succesful updated`)}else alert(user.message)},getUsersAsync=async(n,t)=>{const i=await fetch(`/admin/users/${n}/${t}`,{method:"GET",headers:{Accept:"application/json"}});if(i.ok===!0)return await i.json();console.log(i.status);alert(`cannot load users with status: ${i.status}`)},printUsersTableAsync=async(n,t)=>{var i='<table style="table-layout: auto"><thead><tr><th>Name<\/th><th>Surname<\/th><th>Email<\/th><th>Password<\/th><th>Phone number<\/th><th>Role<\/th><th>Buttons<\/th><\/tr><\/thead><tbody id=tbodyUsers>';t.forEach(n=>{i+=`<tr id=userId${n.id}><td>`+n.name+"<\/td><td>"+n.surname+"<\/td><td>"+n.email+"<\/td><td>"+n.password+"<\/td><td>"+n.phoneNumber+"<\/td><td>"+n.role+`</td><td><button id=getUserButton${n.id}>Edit</button> <button id=deleteUserButton${n.id}>Delete</button></td></tr>`});i+="<\/tbody><\/table>";n.innerHTML=i;try{t.forEach(n=>{document.getElementById(`getUserButton${n.id}`).addEventListener("click",()=>{fillUserFormWithValuesFromFetch(n),openArea(container,rightGridArea)}),document.getElementById(`deleteUserButton${n.id}`).addEventListener("click",async()=>{removeUserAsync(n)})})}catch(r){alert(r);console.log(r)}},replaceUserDataIntoTR=(n,t,i)=>{n.id=`userId${i.id}`,n.innerHTML=`<td>`+i.name+`</td><td>`+i.surname+`</td><td>`+i.email+`</td><td>`+i.password+"<\/td><td>"+i.phoneNumber+"<\/td><td>"+i.role+`</td><td><button id=getUserButton${i.id}>Edit</button> <button id=deleteUserButton${i.id}>Delete</button></td>`,t.replaceWith(n)},getUsersCountAsync=async()=>{const n=await fetch(`/admin/users/count`,{method:"GET",header:{ACCEPT:"application/json"}});if(n.ok===!0){let t;const i=await n.json();return t=JSON.parse(i),t.Count}alert("Error "+n.status);console.log("Error "+n.status)},getUsersByEmailAsync=async n=>{const t=await fetch(`/admin/users/${n}`,{method:"GET",headers:{Accept:"application/json"}});if(t.ok===!0)return await t.json();console.log(t.status);alert(`cannot load user with status: ${t.status}`)},openArea=(n,t)=>{n.classList.add("containerRightOpen"),n.addEventListener("transitionstart",()=>{t.classList.contains("hidden")&&t.classList.remove("hidden")})},fillUserFormWithValuesFromFetch=n=>{idInput.value=n.id;nameInput.value=n.name;surnameInput.value=n.surname;emailInput.value=n.email;passwordInput.value=n.password;phoneNumberInput.value=n.phoneNumber;switch(n.role){case"Admin":roleAdmin.checked=!0;break;case"User":roleUser.checked=!0}},removeUserAsync=async n=>{let t=confirm(`Are you sure you want to delete ${n.name} ${n.surname} ${n.email}?`);if(t){const t=await fetch("/admin/users",{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({id:n.id})});t.ok===!0?(alert(`${n.name} ${n.surname} ${n.email} deleted!`),document.getElementById(`userId${n.id}`).remove()):(alert("error: "+t.status),console.log(t.status))}},updateVisualUserFormAndUsersTable=async n=>{const t=await fetch(`/admin/users/${n.id}`,{method:"GET",headers:{Accept:"application/json"}});t.ok===!0&&(fillUserFormWithValuesFromFetch(t.json()),openArea(container,rightGridArea),alert("Succesfull updated"))},printNavigateButtonsForUsersList=(n,t=0,i=10,r=50)=>{for(let u=1;u<=t;u++)n.innerHTML+=u==1?`<button class='navigateButtonsOnUsers' id='navigateButtonOnUsers${u}' style='width:${r}px;background-color:#6CDAFF'>${u}</button> `:`<button class='navigateButtonsOnUsers' id='navigateButtonOnUsers${u}' style='width:${r}px;background-color:#2385A6'>${u}</button> `,u%i==0&&(n.innerHTML+=`<br>`)},markCurrentNavigateButton=(n,t)=>{Array.from(n).forEach(n=>{n.style.backgroundColor=n==t?"#6CDAFF":"#2385A6"})},displayONSearchInputs=()=>{divForUsersSearch.style.setProperty("display","block")},displayOFFSearchInputs=()=>{divForUsersSearch.style.setProperty("display","none")},onUsersAdminPanelClick=async()=>{resetContainerHTML(divForNavigateButtons);resetContainerHTML(divForUsersTable);usersCount=await getUsersCountAsync();users=await getUsersAsync(usersLimit,usersOffset);displayONSearchInputs();printNavigateButtonsForUsersList(divForNavigateButtons,usersCount/usersLimit,navigateOnUsersTableButtonsOnRowCount,navigateOnUsersTableButtonsOnRowWidth);await printUsersTableAsync(divForUsersTable,users);for(let n=1;n<=navigateButtons.length;n++){let t=document.getElementById(`navigateButtonOnUsers${n}`);t.addEventListener("click",async()=>{markCurrentNavigateButton(navigateButtons,t);const i=await getUsersAsync(usersLimit,n*usersLimit-usersLimit);await printUsersTableAsync(divForUsersTable,i)})}},resetContainerHTML=n=>{n.innerHTML=""},searchByEmail=async()=>{if(inputSearchByEmail.value.length>4){resetContainerHTML(divForNavigateButtons);resetContainerHTML(divForUsersTable);users=await getUsersByEmailAsync(inputSearchByEmail.value);displayONSearchInputs();await printUsersTableAsync(divForUsersTable,users);for(let n=1;n<=navigateButtons.length;n++){let t=document.getElementById(`navigateButtonOnUsers${n}`);t.addEventListener("click",async()=>{markCurrentNavigateButton(navigateButtons,t);const i=await getUsersAsync(usersLimit,n*usersLimit-usersLimit);await printUsersTableAsync(divForUsersTable,i)})}}else divForNavigateButtons.innerHTML==""&&onUsersAdminPanelClick()};closeEditUserAreaButton.addEventListener("click",function(){closeRightArea(container,rightGridArea)});saveUserButton.addEventListener("click",userUpdate);adminMenuUsers.addEventListener("click",onUsersAdminPanelClick);adminMenuSettings.addEventListener("click",()=>{closeRightArea(container,rightGridArea),resetContainerHTML(divForNavigateButtons),resetContainerHTML(divForUsersTable),displayOFFSearchInputs()});inputSearchByEmail.addEventListener("input",searchByEmail);